# vim: filetype=zsh foldmethod=marker
# helper function for publishing content.

# Init {{{
local PUBPRG=pandoc
local SRCFMT="md"
local PUBFMT="html"
local SRCDIR="$HOME/org"
local PUBDIR="$SRCDIR/docs"
local FILESRX='^\d+-\d+-\d+--\w+--\w+'
local SRCFILES="/tmp/src.txt"
local PUBFILES="/tmp/pub.txt"
# }}}

# sync {{{
__sync() {
  emulate -L zsh
  fd --extension $SRCFMT $FILESRX $SRCDIR --exec echo {/.} | sort > $SRCFILES
  fd --extension $PUBFMT $FILESRX $PUBDIR --exec echo {/.} | sort > $PUBFILES
}
# }}}

# ls {{{
__ls() {
  emulate -L zsh

  while [[ "$1" =~ - && ! "$1" == "--" ]]; do
    case "$1" in
      --invert | -v )
        INVERTFLAG=1
        ;;
    esac; shift; done

    __sync

    if [[ "$INVERTFLAG" -eq 1 ]]; then
      # show what is in SRCFILES but not in PUBFILES ie. what is not published
      comm -23 $SRCFILES $PUBFILES | column
    else
      # show what is common ie. what is published
      comm -12 $SRCFILES $PUBFILES | column
    fi
}
# }}}

# all {{{
__all() {
  emulate -L zsh
  __sync
  for NAME in $(comm -12 $SRCFILES $PUBFILES); do # published files
    echo "pandoc --output $PUBDIR/$NAME.$PUBFMT $NAME.$SRCFMT"
  done
}
# }}}

# Main {{{
case "$1" in
  ls )
    __ls "${@:2}"
    ;;
  all )
    __all "${@:2}"
    ;;
  * )
    if [[ -e "$SRCDIR/$1" ]]; then
      local NAME="${1:t:r}" # only the name
      pandoc ${@:2} --output $PUBDIR/$NAME.$PUBFMT $1
    fi
    ;;
esac
# }}}

