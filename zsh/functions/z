# vim: filetype=zsh foldmethod=marker
# knowledge management using unix tools.

# Init {{{
local GREPPRG=rg
[[ -z $NOTESFORMAT ]] && local NOTESFORMAT="md"
[[ -z $NOTESDIR ]] && local NOTESDIR="$HOME/org"
[[ -z $NOTESFILE ]] && local NOTESFILE="$NOTESDIR/inbox.$NOTESFORMAT"
[[ ! -d $NOTESDIR ]]  && mkdir -p $NOTESDIR
[[ ! -e $NOTESFILE ]] && touch $NOTESFILE
# }}}

# Capture {{{
__capture () {
  emulate -L zsh
  case "$1" in
    --help | -h)
      echo "Capture: open default notes file and start capture process."
      echo "The default notes directory is: $NOTESDIR"
      echo "The default notes file is: $NOTESFILE"
      echo "The default notes format is: $NOTESFORMAT"
      echo
      ;;
    *)
      $EDITOR -c 'startinsert' + $NOTESFILE # start at end of file in insert mode
      ;;
  esac
}
# }}}

# Agenda {{{
# TODO: Allow the ability to pipe results from previous invocation.
__agenda () {
  emulate -L zsh
  case "$1" in
    --state | -s )
      $GREPPRG --smart-case --type $NOTESFORMAT "^#+.$2.*" $NOTESDIR ${@:3}
      ;;
    --State | -S )
      $GREPPRG --smart-case "^#+.$2.*" $NOTESDIR ${@:3}
      ;;
    --tag | -t )
      $GREPPRG --smart-case --type $NOTESFORMAT "^#+.*\{\.$2\}.*" $NOTESDIR ${@:3}
      ;;
    --Tag | -T )
      $GREPPRG --smart-case "^#+.*\{\.$2\}" $NOTESDIR ${@:3}
      ;;
    --help | -h )
      echo "Agenda: print a list of headers matching a specific state or tag."
      echo "--state -s: print headers matching the specified state. Limit search to notes format."
      echo "--State -S: same as above but search in all files."
      echo "--tag -t: print headers matching the specified tag. Limit search to notes format."
      echo "--Tag -T: same as above but search in all."
      echo "With no arguments print all headers with TODO state. Limit search to notes format."
      echo "All additional arguments are passed to ripgrep verbatim."
      echo
      ;;
    *)
      $GREPPRG --smart-case --type $NOTESFORMAT "^#+.TODO.*"
      ;;
  esac

}
# }}}

# Main {{{
if [[ "$#" -eq 0 ]]; then
  __capture && exit
else
  case "$1" in
    agenda)
      __agenda "${@:2}"
      ;;
    capture)
      __capture "${@:2}"
      ;;
    cd)
      cd $NOTESDIR
      ;;
    help)
      echo "z: knowledge management using standard unix tools."
      echo "capture: subcommand to open the default notes file and start capture process."
      echo "agenda: subcommand to print a list of headers. See z agenda --help for more info."
      echo "cd: subcommand to change current directory to default notes directory."
      echo
      ;;
    *)
      # do nothing
      ;;
  esac
fi
# }}}
