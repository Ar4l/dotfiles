#!/usr/bin/env fish

set -U XDG_CONFIG_HOME (dirname (pwd))/.config

function _echo_ok
    printf "\r\033[2K\033[0;32m[ OK ]\033[0m %s\n" "$argv"
end

function _echo_fail
    printf "\r\033[2K\033[0;31m[ FAIL ]\033[0m %s\n" "$argv"
end

function _mklink -a src target -d "creates a symbolic link between SRC & TARGET"
   set flags "-svf"

   command mkdir -p $target
   command ln $flags $src $target
end

function _cleanup -a target -d "removes TARGET recursively"
    set flags "-rvf"

    command rm $flags $XDG_CONFIG_HOME/$target
end

function _is_callable -a cmd -d "accepts a COMMAND and checks if it exists"
    command -sq $cmd ; or false
end

function _is_valid_topic -a topic -d "accepts a TOPIC and checks if a corresponding dir \
is present in the root dir of the project and if TOPIC/_init exists"

    function _valid_topic -S
        test -d "$topic"
        and test -e "$topic/_init"
    end

    if _valid_topic
        true
    else
        _echo_fail "$topic is not a valid topic"
        false
    end
end

function _is_enabled_topic -a topic -d "checks if TOPIC is enabled or not"
    if _is_valid_topic $topic; and contains $topic $ENABLED_TOPICS
        true
    else
        _echo_fail "$topic is not installed"
        false
    end
end

function _enable_topic -a topic -d "adds TOPIC to list of enabled topics"
    if not _is_valid_topic $topic
        return 1
    end

    if not contains $topic $ENABLED_TOPICS
        set -U ENABLED_TOPICS $ENABLED_TOPICS $topic
        _echo_ok "$topic enabled!"
    else
        _echo_ok "$topic already enabled!"
        false
    end
end

function _disable_topic -a topic -d "removes TOPIC from list of enabled topics"
    if not _is_valid_topic $topic
        return 1
    end

    if contains $topic $ENABLED_TOPICS
        set index (contains -i $topic $ENABLED_TOPICS)
        set -e ENABLED_TOPICS[$index]
        _echo_ok "$topic disabled!"
    else
        _echo_ok "$topic already disabled!"
        false
    end
end
