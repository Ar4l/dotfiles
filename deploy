#!/usr/bin/env fish

source env

function _install_topics
    set topics $argv

    for topic in $topics
        if _is_valid_topic $topic; and _enable_topic $topic
            _echo_ok "source $topic/_init..."
            source "$topic/_init"

            _echo_ok "install $topic/_init..."
            install

            _echo_ok "link $topic/_init..."
            _link_topics $topic
        end
    end
end

# TODO: work in progress...
function _link_topics
    echo "_link_topics: under construction..."
end

# TODO: work in progress...
function _delete_topics
    echo "_delete_topics: under construction..."
end

function _echo_usage
    printf "
    usage: ./deploy FLAGS TOPICS
    if no FLAGS are passed then given TOPICS are installed & linked

    valid FLAGS: -h -l -d
    -h: print this help message
    -l: link given TOPICS
    -d: delete given TOPICS

    example usage:
    ./deploy base # install and link base
    ./deploy base zsh fish # install and link base, zsh & fish
    ./deploy -l base zsh fish # only link base, zsh & fish
    ./deploy -d tmux # delete tmux
    "
end

# TODO: work in progress, requires furthur implementation and testing
function deploy
    set options (fish_opt -s h) (fish_opt -s l) (fish_opt -s d)
    argparse -n deploy $options -- $argv
    set topics $argv

    function _any_topics -S
        test (count $topics) -gt 0
    end

    function _any_options -S
        test $_flag_h; or test $_flag_l; or test $_flag_d
    end

    if not _any_topics; and not _any_options; or test $_flag_h
        _echo_usage
        return 0
    end

    # TODO: implement this using -x flag of argparse
    # need to know how to define a comma separated list
    if test $_flag_l; and test $_flag_d
        _echo_fail "cannot link and delete at the same time"
        return 1
    end

    if test $_flag_l
        _link_topics $topics
    end

    if test $_flag_d
        _delete_topics $topics
    end

    if _any_topics; and not _any_options
        _install_topics $topics
    end
end

deploy $argv
