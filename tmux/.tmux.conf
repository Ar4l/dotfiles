# set to xterm-256color if not in kitty
set -g default-terminal xterm-256color
# set -g default-terminal xterm-kitty

# address delay while switching vim mode
set -s escape-time 0

# act like vim
setw -g mode-keys vi

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'

# resizing
unbind Left
unbind Right
unbind Down
unbind Up
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5
bind -r Down resize-pane -D 5
bind -r Up resize-pane -U 5

# do not ask for confirmation
bind x kill-pane
bind X kill-window
bind q kill-session
bind Q kill-server

set -g mouse on

# set prefix to space
unbind C-b
set -g prefix C-s

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# more intuitive keybindings for splitting
# open new splits & windows with path of current pane
unbind %
unbind '"'
bind \ split-window -h -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# bind enter to start copy-mode
bind Enter copy-mode

# copy paste setup using clipper
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc localhost 8377"


bind -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# status line
# set -g status-justify centre
set -g status-left ' #[fg=yellow,bold,italics]#S  '
set -g status-right "#[fg=yellow,bold,italics] $USER@#h  #[fg=red,bold,italics]#(date '+%a %b %d')"
set -g status-left-length 50
set -g status-style 'bg=black,fg=yellow'
set -g status-interval 60 # update statusbar every 60 seconds

# Highlight window activities.
set -g window-status-format '#W '
set -g window-status-current-format '#{?window_zoomed_flag,∞,•}#W '
set -g window-status-current-style 'bg=black,fg=green,bold,italics'
# Show bells in window titles.
set-option -g window-status-bell-style fg=yellow,bold,underscore

# start window and pane numbering at i
set -g base-index 1
set -g pane-base-index 1

# taken from wincent/wincent
# Dynamically update iTerm tab and window titles.
set -g set-titles on
set -g focus-events on

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
set -g set-titles-string "#h > #S > #W"

# windows
# colour236 is the closest to what base16-default-dark uses for colorcolumn
set -g window-style 'bg=colour236'
set -g window-active-style 'bg=black'

# panes
set -g pane-border-style 'fg=blue,bg=colour236'
set -g pane-active-border-style 'fg=blue,bg=colour236'

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set-option -w -g wrap-search off
