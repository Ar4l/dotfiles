# improve colors and add italics
set -g default-terminal 'tmux-256color'

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# resizing
unbind Left
unbind Right
unbind Down
unbind Up
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5
bind -r Down resize-pane -D 5
bind -r Up resize-pane -U 5

set -g prefix2 C-s

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# edit configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# more intuitive keybindings for splitting
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# status line
set -g status-justify centre
set -g status-left '#[fg=red,bold,italics]#S âˆ†'
set -g status-right ''
set -g status-left-length 50
set -g status-bg '#232c31'
set -g status-fg '#a54242'

# Highlight active window.
set -w -g window-status-current-fg yellow
set -w -g window-status-current-bg '#232c31'

# copy paste setup
set-option -g default-command "reattach-to-user-namespace -l zsh"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel  "reattach-to-user-namespace pbcopy"

# Show bells in window titles.
set -g window-status-bell-style fg=red,bold,underscore

